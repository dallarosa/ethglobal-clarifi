/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AutoswapModule,
  AutoswapModuleInterface,
} from "../../../contracts/AutoswapModule.sol/AutoswapModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniswapV2Router02",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "safe",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "desiredToken",
        type: "address",
      },
    ],
    name: "DesiredTokenSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "safe",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "fromToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "destToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromAmount",
        type: "uint256",
      },
    ],
    name: "ExecuteAutoswap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "safe",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "sourceToken",
        type: "address",
      },
    ],
    name: "SourceTokenSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "safe",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "sourceToken",
        type: "address",
      },
    ],
    name: "SourceTokenUnset",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "desiredTokens",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract GnosisSafe",
        name: "safe",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeAutoswap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "safe",
        type: "address",
      },
    ],
    name: "getDesiredToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "desiredToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "setDesiredToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "setSourceToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "sourceTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Router02",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "unsetSourceToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001632380380620016328339818101604052810190620000379190620000e9565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b18262000084565b9050919050565b620000c381620000a4565b8114620000cf57600080fd5b50565b600081519050620000e381620000b8565b92915050565b6000602082840312156200010257620001016200007f565b5b60006200011284828501620000d2565b91505092915050565b611507806200012b6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a7c6402c11610066578063a7c6402c14610145578063b4b5267914610163578063e01df1ef14610193578063e0a31237146101af578063ffa1ad74146101df5761009e565b806322ee13c4146100a357806382a1ce1b146100bf57806383b731c5146100db578063a3f4df7e1461010b578063a6a3245414610129575b600080fd5b6100bd60048036038101906100b89190610c45565b6101fd565b005b6100d960048036038101906100d49190610c98565b61073d565b005b6100f560048036038101906100f09190610cf1565b61082e565b6040516101029190610d7d565b60405180910390f35b610113610861565b6040516101209190610e28565b60405180910390f35b610143600480360381019061013e9190610c98565b61089a565b005b61014d610974565b60405161015a9190610e6b565b60405180910390f35b61017d60048036038101906101789190610cf1565b61099a565b60405161018a9190610d7d565b60405180910390f35b6101ad60048036038101906101a89190610c98565b610a02565b005b6101c960048036038101906101c49190610e86565b610af4565b6040516101d69190610ee1565b60405180910390f35b6101e7610b23565b6040516101f49190610e28565b60405180910390f35b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166102c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bd90610f6e565b60405180910390fd5b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038f90610fda565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016103f5929190611018565b6020604051808303816000875af1158015610414573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610438919061106d565b610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046e906110e6565b60405180910390fd5b6000600267ffffffffffffffff81111561049457610493611106565b5b6040519080825280602002602001820160405280156104c25781602001602082028036833780820191505090505b50905083816000815181106104da576104d9611135565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050818160018151811061052957610528611135565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600083600083884260405160240161057f95949392919061128b565b6040516020818303038152906040527f38ed1739000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508573ffffffffffffffffffffffffffffffffffffffff1663468721a7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008460006040518563ffffffff1660e01b815260040161066194939291906113e2565b6020604051808303816000875af1158015610680573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a4919061106d565b6106e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106da9061147a565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff167f2d5e3a37a9a962c11440321c8cb142ac20dbc688e40004cacf5bf3c5e73fa39386858760405161072d9392919061149a565b60405180910390a2505050505050565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb2344971edae5612fcccb4f2b0639cb708244e7f0b69ab5c159e7ee25d1f1b6b60405160405180910390a350565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600f81526020017f4175746f73776170204d6f64756c65000000000000000000000000000000000081525081565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fee962939df889c0a3806c2f157a7b9e546a5a02ce2b551f1607c94b210c4287360405160405180910390a350565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f09cbc5e8ab797524b32acfb6c80c4e45f29655934c44ccd73dd8d3f5af83ce7160405160405180910390a350565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6040518060400160405280600581526020017f302e312e3000000000000000000000000000000000000000000000000000000081525081565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8c82610b61565b9050919050565b6000610b9e82610b81565b9050919050565b610bae81610b93565b8114610bb957600080fd5b50565b600081359050610bcb81610ba5565b92915050565b6000610bdc82610b81565b9050919050565b610bec81610bd1565b8114610bf757600080fd5b50565b600081359050610c0981610be3565b92915050565b6000819050919050565b610c2281610c0f565b8114610c2d57600080fd5b50565b600081359050610c3f81610c19565b92915050565b600080600060608486031215610c5e57610c5d610b5c565b5b6000610c6c86828701610bbc565b9350506020610c7d86828701610bfa565b9250506040610c8e86828701610c30565b9150509250925092565b600060208284031215610cae57610cad610b5c565b5b6000610cbc84828501610bfa565b91505092915050565b610cce81610b81565b8114610cd957600080fd5b50565b600081359050610ceb81610cc5565b92915050565b600060208284031215610d0757610d06610b5c565b5b6000610d1584828501610cdc565b91505092915050565b6000819050919050565b6000610d43610d3e610d3984610b61565b610d1e565b610b61565b9050919050565b6000610d5582610d28565b9050919050565b6000610d6782610d4a565b9050919050565b610d7781610d5c565b82525050565b6000602082019050610d926000830184610d6e565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dd2578082015181840152602081019050610db7565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dfa82610d98565b610e048185610da3565b9350610e14818560208601610db4565b610e1d81610dde565b840191505092915050565b60006020820190508181036000830152610e428184610def565b905092915050565b6000610e5582610d4a565b9050919050565b610e6581610e4a565b82525050565b6000602082019050610e806000830184610e5c565b92915050565b60008060408385031215610e9d57610e9c610b5c565b5b6000610eab85828601610cdc565b9250506020610ebc85828601610bfa565b9150509250929050565b60008115159050919050565b610edb81610ec6565b82525050565b6000602082019050610ef66000830184610ed2565b92915050565b7f736f7572636520746f6b656e206973206e6f7420696e2074686520616c6c6f7760008201527f6c69737400000000000000000000000000000000000000000000000000000000602082015250565b6000610f58602483610da3565b9150610f6382610efc565b604082019050919050565b60006020820190508181036000830152610f8781610f4b565b9050919050565b7f6465736972656420746f6b656e20686173206e6f74206265656e207365740000600082015250565b6000610fc4601e83610da3565b9150610fcf82610f8e565b602082019050919050565b60006020820190508181036000830152610ff381610fb7565b9050919050565b61100381610b81565b82525050565b61101281610c0f565b82525050565b600060408201905061102d6000830185610ffa565b61103a6020830184611009565b9392505050565b61104a81610ec6565b811461105557600080fd5b50565b60008151905061106781611041565b92915050565b60006020828403121561108357611082610b5c565b5b600061109184828501611058565b91505092915050565b7f617070726f7665206661696c65642e0000000000000000000000000000000000600082015250565b60006110d0600f83610da3565b91506110db8261109a565b602082019050919050565b600060208201905081810360008301526110ff816110c3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b600060ff82169050919050565b600061119661119161118c84611164565b610d1e565b61116e565b9050919050565b6111a68161117b565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6111e181610b81565b82525050565b60006111f383836111d8565b60208301905092915050565b6000602082019050919050565b6000611217826111ac565b61122181856111b7565b935061122c836111c8565b8060005b8381101561125d57815161124488826111e7565b975061124f836111ff565b925050600181019050611230565b5085935050505092915050565b600061127582610d4a565b9050919050565b6112858161126a565b82525050565b600060a0820190506112a06000830188611009565b6112ad602083018761119d565b81810360408301526112bf818661120c565b90506112ce606083018561127c565b6112db6080830184611009565b9695505050505050565b60006113006112fb6112f684611164565b610d1e565b610c0f565b9050919050565b611310816112e5565b82525050565b600081519050919050565b600082825260208201905092915050565b600061133d82611316565b6113478185611321565b9350611357818560208601610db4565b61136081610dde565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106113ab576113aa61136b565b5b50565b60008190506113bc8261139a565b919050565b60006113cc826113ae565b9050919050565b6113dc816113c1565b82525050565b60006080820190506113f76000830187610ffa565b6114046020830186611307565b81810360408301526114168185611332565b905061142560608301846113d3565b95945050505050565b7f436f756c64206e6f742065786563757465207377617000000000000000000000600082015250565b6000611464601683610da3565b915061146f8261142e565b602082019050919050565b6000602082019050818103600083015261149381611457565b9050919050565b60006060820190506114af6000830186610d6e565b6114bc6020830185610d6e565b6114c96040830184611009565b94935050505056fea2646970667358221220f8a7fe180ef3c58ed27b8fa10822dbe5ae9c047689dbee84d7037a68236fe32d64736f6c63430008110033";

type AutoswapModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AutoswapModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AutoswapModule__factory extends ContractFactory {
  constructor(...args: AutoswapModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _uniswapV2Router02: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AutoswapModule> {
    return super.deploy(
      _uniswapV2Router02,
      overrides || {}
    ) as Promise<AutoswapModule>;
  }
  override getDeployTransaction(
    _uniswapV2Router02: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_uniswapV2Router02, overrides || {});
  }
  override attach(address: string): AutoswapModule {
    return super.attach(address) as AutoswapModule;
  }
  override connect(signer: Signer): AutoswapModule__factory {
    return super.connect(signer) as AutoswapModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoswapModuleInterface {
    return new utils.Interface(_abi) as AutoswapModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutoswapModule {
    return new Contract(address, _abi, signerOrProvider) as AutoswapModule;
  }
}
